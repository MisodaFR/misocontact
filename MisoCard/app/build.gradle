apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    def versionPropsFile = file('version.properties')
    Properties versionProps = new Properties()

    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))
        // Lecture valeur de code de version depuis le fichier : version.properties
        def codeOfVersion = versionProps['VERSION_CODE'].toInteger()

        List<String> runTasks = gradle.startParameter.getTaskNames()

        // Only increase if on release (Chi tang khi release bundle)
        if (runTasks.contains(":app:bundleRelease")) {
            codeOfVersion++
        }

        def first = codeOfVersion.intdiv(100)
        def second = codeOfVersion.intdiv(10) % 10
        def third = codeOfVersion.intdiv(1) % 10

        def nameOfVersion = first + "." + second + "." + third

        defaultConfig {
            applicationId "fr.misoda.contact"
            minSdkVersion 21
            targetSdkVersion 30
            versionCode codeOfVersion
            versionName nameOfVersion
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            // The following argument makes the Android Test Orchestrator run its
            // "pm clear" command after each test invocation. This command ensures
            // that the app's state is completely cleared between tests.
            testInstrumentationRunnerArguments clearPackageData: 'true'
            multiDexEnabled true

            setProperty("archivesBaseName", "MisoContact" + "_" + versionName)
        }

        // Sauvergarder le code de version dans le fichier : version.properties
        versionProps['VERSION_CODE'] = codeOfVersion.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        dexOptions {
            incremental true
            javaMaxHeapSize "4g"
        }

        dexOptions {
            // Comment the following in order to see actual errors, not unhelpful "too many errors"!
            // preDexLibraries = false
            additionalParameters = ['--core-library']
        }

        packagingOptions {
            exclude 'META-INF/DEPENDENCIES.txt'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/notice.txt'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/dependencies.txt'
            exclude 'META-INF/LGPL2.1'
            exclude 'readme.html'
            exclude 'license.html'
        }

        compileOptions {
            sourceCompatibility = 1.8
            targetCompatibility = 1.8
        }

    } else {
        throw new GradleException("Could not read version.properties!")
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment:2.3.1'
    implementation 'androidx.navigation:navigation-ui:2.3.1'
    implementation 'com.google.android.gms:play-services-vision:20.1.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation "androidx.preference:preference:1.1.1"
    implementation project(':material_showcaseview_lib')
    implementation 'com.github.madrapps:pikolo:2.0.1'
    implementation 'com.github.duanhong169:colorpicker:1.1.6'
    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.12.7'

    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

apply plugin: "androidx.navigation.safeargs"